<?php

namespace onefasteuro\ShopifyApps\Tests;


use onefasteuro\ShopifyApps\ServiceProvider;
use onefasteuro\ShopifyClient\ShopifyClientServiceProvider;
use Orchestra\Testbench\TestCase as BaseTestCase;
use onefasteuro\ShopifyApps\Models\ShopifyApp;
use Faker\Factory as FakerFactory;
	
class TestCase extends BaseTestCase
{
	use \Illuminate\Foundation\Testing\RefreshDatabase;
	
	protected $fake_app;
	
	protected function fakerApp()
	{
		$app = new ShopifyApp;
		$app->id = 1;
		$app->shop_id = FakerFactory::create()->randomNumber();
		$app->app_installation_id = FakerFactory::create()->randomNumber();
		$app->app_name = 'test-app';
		$app->app_launch_url = 'https://' . getenv('SHOPIFY_APP_DOMAIN') . '/admin/apps/test-app';
		$app->shop_domain = getenv('SHOPIFY_APP_DOMAIN');
		$app->shop_email = FakerFactory::create()->email;
		$app->token = getenv('SHOPIFY_APP_TOKEN');
		$app->shop_name = FakerFactory::create()->name;
		$app->save();
		
		$this->fake_app = $app;
	}
	
	
		
	protected function getPackageProviders($app)
	{
		return [ServiceProvider::class, ShopifyClientServiceProvider::class];
	}
	
	
	protected function setUp(): void
	{
		parent::setUp(); // TODO: Change the autogenerated stub
		
		$this->artisan('migrate', ['--database' => 'testing'])->run();
		
		$dotenv = \Dotenv\Dotenv::create(__DIR__.'/../');
		$dotenv->load();
		
		$this->fakerApp();
	}
	
	
	
	protected function tearDown(): void
	{
		parent::tearDown(); // TODO: Change the autogenerated stub
	}
	
	
	/**
	 * Define environment setup.
	 *
	 * @param  \Illuminate\Foundation\Application  $app
	 * @return void
	 */
	protected function getEnvironmentSetUp($app)
	{
		// Setup default database to use sqlite :memory:
		$app['config']->set('database.default', 'testing');
		/*
		$app['config']->set('database.connections.testing', [
			'driver' => 'sqlite',
			'database' => ':memory:',
			'prefix' => '',
		]);
		*/
		
		$app['config']->set('session.driver', 'array');
		
		
		$app['config']->set('app.key', 'base64:pulZAoVJxNN6JSeDIhHNvpXZL5UGJmQU2BldkmtexoY=');
	}
}
